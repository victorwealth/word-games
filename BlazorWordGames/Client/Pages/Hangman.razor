@page "/hangman"
@inject DataService data

<meta http-equiv="cache-control" content="no-cache" />

<div class="layout-main container">
    <div id="word">
      
        <span class="clue">@word.DisplayClue</span>


        <div>
            <button class="btn btn-primary" @onclick="FetchNextWord">Next Word</button>
            <div>@word.SelectedWord</div>
        </div>
    </div>
    <br/>
    <div class="row">
        <div class="col-lg-1 offset-lg-1"><button class="alpha_btns" disabled="@disableBtn['a']"  @onclick="@(() => Guess('A'))">A</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['b']" @onclick="@(() => Guess('B'))">B</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['c']" @onclick="@(() => Guess('C'))">C</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['d']" @onclick="@(() => Guess('D'))">D</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['e']" @onclick="@(() => Guess('E'))">E</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['f']" @onclick="@(() => Guess('F'))">F</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['g']" @onclick="@(() => Guess('G'))">G</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['h']" @onclick="@(() => Guess('H'))">H</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['i']" @onclick="@(() => Guess('I'))">I</button></div>
    </div>
    <div class="row">
        <div class="col-lg-1 offset-lg-1"><button class="alpha_btns" disabled="@disableBtn['j']" @onclick="@(() => Guess('J'))">J</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['k']" @onclick="@(() => Guess('K'))">K</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['l']" @onclick="@(() => Guess('L'))">L</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['m']" @onclick="@(() => Guess('M'))">M</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['n']" @onclick="@(() => Guess('N'))">N</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['o']" @onclick="@(() => Guess('O'))">O</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['p']" @onclick="@(() => Guess('P'))">P</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['q']" @onclick="@(() => Guess('Q'))">Q</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['r']" @onclick="@(() => Guess('R'))">R</button></div>
    </div>
    <div class="row">
        <div class="col-lg-1 offset-lg-1"><button class="alpha_btns" disabled="@disableBtn['s']" @onclick="@(() => Guess('S'))">S</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['t']" @onclick="@(() => Guess('T'))">T</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['u']" @onclick="@(() => Guess('U'))">U</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['v']" @onclick="@(() => Guess('V'))">V</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['w']" @onclick="@(() => Guess('W'))">W</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['x']" @onclick="@(() => Guess('X'))">X</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['y']" @onclick="@(() => Guess('Y'))">Y</button></div>
        <div class="col-lg-1"><button class="alpha_btns" disabled="@disableBtn['z']" @onclick="@(() => Guess('Z'))">Z</button></div>
    </div>

    <br/>

</div>



@code {
    // TODO
    // 1. Disable button(s) after it's clicked - DONE
    // 2. Change color of correct guess to green and incorrect guess to red
    // 3. Fix unit tests

}


@code {

    public WordDto word { get; set; } = new WordDto();
    public Dictionary<char, bool> disableBtn = new Dictionary<char, bool>()
    {
        { 'a', false },{ 'b', false },{ 'c', false },{ 'd', false },{ 'e', false },{ 'f', false },{ 'g', false },{ 'h', false },{ 'i', false },{ 'j', false },
        { 'k', false },{ 'l', false },{ 'm', false },{ 'n', false },{ 'o', false },{ 'p', false },{ 'q', false },{ 'r', false },{ 's', false },{ 't', false },
        { 'u', false },{ 'v', false },{ 'w', false },{ 'x', false },{ 'y', false },{ 'z', false }
    };



    protected async override Task OnParametersSetAsync()
    {
        word = await data.GetWord();
    }

    protected async Task FetchNextWord()
    {
        // unset all items whose value is true, to false
        foreach (var item in disableBtn.Where(item => item.Value == true).ToList())
            disableBtn[item.Key] = false;

        word = await data.GetWord();
        StateHasChanged();
    }

    async Task Guess(char guess)
    {
        disableBtn[char.ToLower(guess)] = true;
        word.Guess = guess;
        word = await data.FetchClue(word);
        StateHasChanged();
    }
}
